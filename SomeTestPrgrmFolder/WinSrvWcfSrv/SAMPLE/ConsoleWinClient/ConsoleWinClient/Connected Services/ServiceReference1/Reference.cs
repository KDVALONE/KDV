//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleWinClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/EchoLib")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendingTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderName {
            get {
                return this.SenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                    this.SenderNameField = value;
                    this.RaisePropertyChanged("SenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendingTime {
            get {
                return this.SendingTimeField;
            }
            set {
                if ((this.SendingTimeField.Equals(value) != true)) {
                    this.SendingTimeField = value;
                    this.RaisePropertyChanged("SendingTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MyApp.ServiceModel.Samples", ConfigurationName="ServiceReference1.IMessageCollector")]
    public interface IMessageCollector {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/Talk", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/TalkResponse")]
        string Talk(ConsoleWinClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/Talk", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/TalkResponse")]
        System.Threading.Tasks.Task<string> TalkAsync(ConsoleWinClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/SendAnsewer", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/SendAnsewerResponse")]
        string SendAnsewer(ConsoleWinClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/SendAnsewer", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/SendAnsewerResponse")]
        System.Threading.Tasks.Task<string> SendAnsewerAsync(ConsoleWinClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/CollectMessage", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/CollectMessageResponse")]
        void CollectMessage(ConsoleWinClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MyApp.ServiceModel.Samples/IMessageCollector/CollectMessage", ReplyAction="http://MyApp.ServiceModel.Samples/IMessageCollector/CollectMessageResponse")]
        System.Threading.Tasks.Task CollectMessageAsync(ConsoleWinClient.ServiceReference1.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageCollectorChannel : ConsoleWinClient.ServiceReference1.IMessageCollector, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageCollectorClient : System.ServiceModel.ClientBase<ConsoleWinClient.ServiceReference1.IMessageCollector>, ConsoleWinClient.ServiceReference1.IMessageCollector {
        
        public MessageCollectorClient() {
        }
        
        public MessageCollectorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageCollectorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageCollectorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageCollectorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Talk(ConsoleWinClient.ServiceReference1.Message message) {
            return base.Channel.Talk(message);
        }
        
        public System.Threading.Tasks.Task<string> TalkAsync(ConsoleWinClient.ServiceReference1.Message message) {
            return base.Channel.TalkAsync(message);
        }
        
        public string SendAnsewer(ConsoleWinClient.ServiceReference1.Message message) {
            return base.Channel.SendAnsewer(message);
        }
        
        public System.Threading.Tasks.Task<string> SendAnsewerAsync(ConsoleWinClient.ServiceReference1.Message message) {
            return base.Channel.SendAnsewerAsync(message);
        }
        
        public void CollectMessage(ConsoleWinClient.ServiceReference1.Message message) {
            base.Channel.CollectMessage(message);
        }
        
        public System.Threading.Tasks.Task CollectMessageAsync(ConsoleWinClient.ServiceReference1.Message message) {
            return base.Channel.CollectMessageAsync(message);
        }
    }
}
